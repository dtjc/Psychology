// Generated by dagger.internal.codegen.ComponentProcessor (https://google.github.io/dagger).
package com.dt.psychology.dagger2.modules;

import com.dt.psychology.presenter.activitis.SignUpPresenter;
import com.dt.psychology.presenter.activitis.SignUpPresenterImpl;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

public final class ActivityModule_ProvideSignUpPresenterImplFactory
    implements Factory<SignUpPresenter> {
  private final ActivityModule module;

  private final Provider<SignUpPresenterImpl> signUpPresenterProvider;

  public ActivityModule_ProvideSignUpPresenterImplFactory(
      ActivityModule module, Provider<SignUpPresenterImpl> signUpPresenterProvider) {
    assert module != null;
    this.module = module;
    assert signUpPresenterProvider != null;
    this.signUpPresenterProvider = signUpPresenterProvider;
  }

  @Override
  public SignUpPresenter get() {
    return Preconditions.checkNotNull(
        module.provideSignUpPresenterImpl(signUpPresenterProvider.get()),
        "Cannot return null from a non-@Nullable @Provides method");
  }

  public static Factory<SignUpPresenter> create(
      ActivityModule module, Provider<SignUpPresenterImpl> signUpPresenterProvider) {
    return new ActivityModule_ProvideSignUpPresenterImplFactory(module, signUpPresenterProvider);
  }
}
