// Generated by dagger.internal.codegen.ComponentProcessor (https://google.github.io/dagger).
package com.dt.psychology.dagger2.modules;

import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;
import okhttp3.OkHttpClient;
import retrofit2.Retrofit;

public final class AppModule_ProvideRetrofitFactory implements Factory<Retrofit> {
  private final AppModule module;

  private final Provider<OkHttpClient> clientProvider;

  public AppModule_ProvideRetrofitFactory(AppModule module, Provider<OkHttpClient> clientProvider) {
    assert module != null;
    this.module = module;
    assert clientProvider != null;
    this.clientProvider = clientProvider;
  }

  @Override
  public Retrofit get() {
    return Preconditions.checkNotNull(
        module.provideRetrofit(clientProvider.get()),
        "Cannot return null from a non-@Nullable @Provides method");
  }

  public static Factory<Retrofit> create(AppModule module, Provider<OkHttpClient> clientProvider) {
    return new AppModule_ProvideRetrofitFactory(module, clientProvider);
  }

  /** Proxies {@link AppModule#provideRetrofit(OkHttpClient)}. */
  public static Retrofit proxyProvideRetrofit(AppModule instance, OkHttpClient client) {
    return instance.provideRetrofit(client);
  }
}
