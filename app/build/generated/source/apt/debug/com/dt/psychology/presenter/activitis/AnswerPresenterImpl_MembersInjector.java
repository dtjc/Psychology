// Generated by dagger.internal.codegen.ComponentProcessor (https://google.github.io/dagger).
package com.dt.psychology.presenter.activitis;

import com.dt.psychology.network.QAndAService;
import dagger.MembersInjector;
import javax.inject.Provider;

public final class AnswerPresenterImpl_MembersInjector
    implements MembersInjector<AnswerPresenterImpl> {
  private final Provider<QAndAService> qAndAServiceProvider;

  public AnswerPresenterImpl_MembersInjector(Provider<QAndAService> qAndAServiceProvider) {
    assert qAndAServiceProvider != null;
    this.qAndAServiceProvider = qAndAServiceProvider;
  }

  public static MembersInjector<AnswerPresenterImpl> create(
      Provider<QAndAService> qAndAServiceProvider) {
    return new AnswerPresenterImpl_MembersInjector(qAndAServiceProvider);
  }

  @Override
  public void injectMembers(AnswerPresenterImpl instance) {
    if (instance == null) {
      throw new NullPointerException("Cannot inject members into a null reference");
    }
    instance.qAndAService = qAndAServiceProvider.get();
  }

  public static void injectQAndAService(
      AnswerPresenterImpl instance, Provider<QAndAService> qAndAServiceProvider) {
    instance.qAndAService = qAndAServiceProvider.get();
  }
}
