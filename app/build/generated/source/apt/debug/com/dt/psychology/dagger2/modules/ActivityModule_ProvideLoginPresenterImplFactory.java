// Generated by dagger.internal.codegen.ComponentProcessor (https://google.github.io/dagger).
package com.dt.psychology.dagger2.modules;

import com.dt.psychology.presenter.activitis.LoginPresenter;
import com.dt.psychology.presenter.activitis.LoginPresenterImpl;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

public final class ActivityModule_ProvideLoginPresenterImplFactory
    implements Factory<LoginPresenter> {
  private final ActivityModule module;

  private final Provider<LoginPresenterImpl> loginPresenterProvider;

  public ActivityModule_ProvideLoginPresenterImplFactory(
      ActivityModule module, Provider<LoginPresenterImpl> loginPresenterProvider) {
    assert module != null;
    this.module = module;
    assert loginPresenterProvider != null;
    this.loginPresenterProvider = loginPresenterProvider;
  }

  @Override
  public LoginPresenter get() {
    return Preconditions.checkNotNull(
        module.provideLoginPresenterImpl(loginPresenterProvider.get()),
        "Cannot return null from a non-@Nullable @Provides method");
  }

  public static Factory<LoginPresenter> create(
      ActivityModule module, Provider<LoginPresenterImpl> loginPresenterProvider) {
    return new ActivityModule_ProvideLoginPresenterImplFactory(module, loginPresenterProvider);
  }
}
