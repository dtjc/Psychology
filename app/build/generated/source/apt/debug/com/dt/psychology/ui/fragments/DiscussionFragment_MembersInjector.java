// Generated by dagger.internal.codegen.ComponentProcessor (https://google.github.io/dagger).
package com.dt.psychology.ui.fragments;

import com.dt.psychology.presenter.fragments.DiscussionFPresenter;
import dagger.MembersInjector;
import javax.inject.Provider;

public final class DiscussionFragment_MembersInjector
    implements MembersInjector<DiscussionFragment> {
  private final Provider<DiscussionFPresenter> discussionFPresenterProvider;

  public DiscussionFragment_MembersInjector(
      Provider<DiscussionFPresenter> discussionFPresenterProvider) {
    assert discussionFPresenterProvider != null;
    this.discussionFPresenterProvider = discussionFPresenterProvider;
  }

  public static MembersInjector<DiscussionFragment> create(
      Provider<DiscussionFPresenter> discussionFPresenterProvider) {
    return new DiscussionFragment_MembersInjector(discussionFPresenterProvider);
  }

  @Override
  public void injectMembers(DiscussionFragment instance) {
    if (instance == null) {
      throw new NullPointerException("Cannot inject members into a null reference");
    }
    instance.discussionFPresenter = discussionFPresenterProvider.get();
  }

  public static void injectDiscussionFPresenter(
      DiscussionFragment instance, Provider<DiscussionFPresenter> discussionFPresenterProvider) {
    instance.discussionFPresenter = discussionFPresenterProvider.get();
  }
}
