// Generated by dagger.internal.codegen.ComponentProcessor (https://google.github.io/dagger).
package com.dt.psychology.presenter.fragments;

import com.dt.psychology.network.QAndAService;
import dagger.MembersInjector;
import java.util.concurrent.ExecutorService;
import javax.inject.Provider;

public final class DiscussionFPresenterImpl_MembersInjector
    implements MembersInjector<DiscussionFPresenterImpl> {
  private final Provider<QAndAService> qAndAServiceProvider;

  private final Provider<ExecutorService> esProvider;

  public DiscussionFPresenterImpl_MembersInjector(
      Provider<QAndAService> qAndAServiceProvider, Provider<ExecutorService> esProvider) {
    assert qAndAServiceProvider != null;
    this.qAndAServiceProvider = qAndAServiceProvider;
    assert esProvider != null;
    this.esProvider = esProvider;
  }

  public static MembersInjector<DiscussionFPresenterImpl> create(
      Provider<QAndAService> qAndAServiceProvider, Provider<ExecutorService> esProvider) {
    return new DiscussionFPresenterImpl_MembersInjector(qAndAServiceProvider, esProvider);
  }

  @Override
  public void injectMembers(DiscussionFPresenterImpl instance) {
    if (instance == null) {
      throw new NullPointerException("Cannot inject members into a null reference");
    }
    instance.qAndAService = qAndAServiceProvider.get();
    instance.es = esProvider.get();
  }

  public static void injectQAndAService(
      DiscussionFPresenterImpl instance, Provider<QAndAService> qAndAServiceProvider) {
    instance.qAndAService = qAndAServiceProvider.get();
  }

  public static void injectEs(
      DiscussionFPresenterImpl instance, Provider<ExecutorService> esProvider) {
    instance.es = esProvider.get();
  }
}
