// Generated by dagger.internal.codegen.ComponentProcessor (https://google.github.io/dagger).
package com.dt.psychology.presenter.activitis;

import dagger.MembersInjector;
import dagger.internal.Factory;
import dagger.internal.MembersInjectors;

public final class SignUpPresenterImpl_Factory implements Factory<SignUpPresenterImpl> {
  private final MembersInjector<SignUpPresenterImpl> signUpPresenterImplMembersInjector;

  public SignUpPresenterImpl_Factory(
      MembersInjector<SignUpPresenterImpl> signUpPresenterImplMembersInjector) {
    assert signUpPresenterImplMembersInjector != null;
    this.signUpPresenterImplMembersInjector = signUpPresenterImplMembersInjector;
  }

  @Override
  public SignUpPresenterImpl get() {
    return MembersInjectors.injectMembers(
        signUpPresenterImplMembersInjector, new SignUpPresenterImpl());
  }

  public static Factory<SignUpPresenterImpl> create(
      MembersInjector<SignUpPresenterImpl> signUpPresenterImplMembersInjector) {
    return new SignUpPresenterImpl_Factory(signUpPresenterImplMembersInjector);
  }
}
