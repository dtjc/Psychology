// Generated by dagger.internal.codegen.ComponentProcessor (https://google.github.io/dagger).
package com.dt.psychology.presenter.activitis;

import com.dt.psychology.domain.ArticleDao;
import com.dt.psychology.network.ArticleService;
import dagger.MembersInjector;
import java.util.concurrent.ExecutorService;
import javax.inject.Provider;

public final class ArticlePresenterImpl_MembersInjector
    implements MembersInjector<ArticlePresenterImpl> {
  private final Provider<ArticleService> articleServiceProvider;

  private final Provider<ExecutorService> esProvider;

  private final Provider<ArticleDao> articleDaoProvider;

  public ArticlePresenterImpl_MembersInjector(
      Provider<ArticleService> articleServiceProvider,
      Provider<ExecutorService> esProvider,
      Provider<ArticleDao> articleDaoProvider) {
    assert articleServiceProvider != null;
    this.articleServiceProvider = articleServiceProvider;
    assert esProvider != null;
    this.esProvider = esProvider;
    assert articleDaoProvider != null;
    this.articleDaoProvider = articleDaoProvider;
  }

  public static MembersInjector<ArticlePresenterImpl> create(
      Provider<ArticleService> articleServiceProvider,
      Provider<ExecutorService> esProvider,
      Provider<ArticleDao> articleDaoProvider) {
    return new ArticlePresenterImpl_MembersInjector(
        articleServiceProvider, esProvider, articleDaoProvider);
  }

  @Override
  public void injectMembers(ArticlePresenterImpl instance) {
    if (instance == null) {
      throw new NullPointerException("Cannot inject members into a null reference");
    }
    instance.articleService = articleServiceProvider.get();
    instance.es = esProvider.get();
    instance.articleDao = articleDaoProvider.get();
  }

  public static void injectArticleService(
      ArticlePresenterImpl instance, Provider<ArticleService> articleServiceProvider) {
    instance.articleService = articleServiceProvider.get();
  }

  public static void injectEs(ArticlePresenterImpl instance, Provider<ExecutorService> esProvider) {
    instance.es = esProvider.get();
  }

  public static void injectArticleDao(
      ArticlePresenterImpl instance, Provider<ArticleDao> articleDaoProvider) {
    instance.articleDao = articleDaoProvider.get();
  }
}
