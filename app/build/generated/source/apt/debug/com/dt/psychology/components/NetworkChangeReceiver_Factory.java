// Generated by dagger.internal.codegen.ComponentProcessor (https://google.github.io/dagger).
package com.dt.psychology.components;

import dagger.MembersInjector;
import dagger.internal.Factory;
import dagger.internal.MembersInjectors;

public final class NetworkChangeReceiver_Factory implements Factory<NetworkChangeReceiver> {
  private final MembersInjector<NetworkChangeReceiver> networkChangeReceiverMembersInjector;

  public NetworkChangeReceiver_Factory(
      MembersInjector<NetworkChangeReceiver> networkChangeReceiverMembersInjector) {
    assert networkChangeReceiverMembersInjector != null;
    this.networkChangeReceiverMembersInjector = networkChangeReceiverMembersInjector;
  }

  @Override
  public NetworkChangeReceiver get() {
    return MembersInjectors.injectMembers(
        networkChangeReceiverMembersInjector, new NetworkChangeReceiver());
  }

  public static Factory<NetworkChangeReceiver> create(
      MembersInjector<NetworkChangeReceiver> networkChangeReceiverMembersInjector) {
    return new NetworkChangeReceiver_Factory(networkChangeReceiverMembersInjector);
  }
}
