// Generated by dagger.internal.codegen.ComponentProcessor (https://google.github.io/dagger).
package com.dt.psychology.dagger2.modules;

import com.dt.psychology.network.QAndAService;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;
import retrofit2.Retrofit;

public final class AppModule_ProvideQAndAServiceFactory implements Factory<QAndAService> {
  private final AppModule module;

  private final Provider<Retrofit> retrofitProvider;

  public AppModule_ProvideQAndAServiceFactory(
      AppModule module, Provider<Retrofit> retrofitProvider) {
    assert module != null;
    this.module = module;
    assert retrofitProvider != null;
    this.retrofitProvider = retrofitProvider;
  }

  @Override
  public QAndAService get() {
    return Preconditions.checkNotNull(
        module.provideQAndAService(retrofitProvider.get()),
        "Cannot return null from a non-@Nullable @Provides method");
  }

  public static Factory<QAndAService> create(
      AppModule module, Provider<Retrofit> retrofitProvider) {
    return new AppModule_ProvideQAndAServiceFactory(module, retrofitProvider);
  }

  /** Proxies {@link AppModule#provideQAndAService(Retrofit)}. */
  public static QAndAService proxyProvideQAndAService(AppModule instance, Retrofit retrofit) {
    return instance.provideQAndAService(retrofit);
  }
}
